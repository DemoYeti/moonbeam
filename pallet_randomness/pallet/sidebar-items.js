window.SIDEBAR_ITEMS = {"constant":[["PALLET_ID","The Randomness’s pallet id"]],"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Custom dispatch errors of this pallet."],["Event","The event emitted by this pallet."]],"mod":[["dispatchables","Auto-generated docs-only module listing all defined dispatchables for this pallet. Note that members of this module cannot be used directly and are only provided for documentation purposes."],["storage_types","Auto-generated docs-only module listing all defined storage types for this pallet. Note that members of this module cannot be used directly and are only provided for documentation purposes."]],"struct":[["Pallet","The pallet implementing the on-chain logic."]],"trait":[["Config","Configuration trait of this pallet."]],"type":[["BalanceOf",""],["LocalVrfOutput","Current local per-block VRF randomness Set in `on_initialize`"],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."],["NotFirstBlock","Records whether this is the first block (genesis or runtime upgrade)"],["PreviousLocalVrfOutput","Previous local per-block VRF randomness Set in `on_finalize` of last block"],["RandomnessResults","Snapshot of randomness to fulfill all requests that are for the same raw randomness Removed once $value.request_count == 0"],["RequestCount","Number of randomness requests made so far, used to generate the next request’s uid"],["RequestId","Request identifier, unique per request for randomness"],["Requests","Randomness requests not yet fulfilled or purged"]]};