window.SIDEBAR_ITEMS = {"derive":[["Codec",""]],"fn":[["decode_arguments","Decode the value from its Solidity ABI format. If `T` is a tuple every element is decoded without a prefixed offset. It matches the encoding of Solidity function arguments and return value, or event data."],["encode_arguments","Encode the value into its Solidity ABI format. If `T` is a tuple every element is encoded without a prefixed offset. It matches the encoding of Solidity function arguments and return value, or event data."],["encode_with_selector","Encode the value as the arguments of a Solidity function with given selector. If `T` is a tuple each member represents an argument of the function."],["selector","Extracts the selector from the start of the input, or returns `None` if the input is too short."]],"mod":[["bytes",""],["native",""],["xcm","Encoding of XCM types for solidity"]],"struct":[["Convert","Adapter to parse data as a first type then convert it to another one. Useful for old precompiles in which Solidity arguments where set larger than the needed Rust type."],["Reader","Wrapper around an EVM input slice."],["String","A UTF-8â€“encoded, growable string."],["Writer","Help build an EVM input/output data."]],"trait":[["Codec","Data that can be encoded/encoded followiong the Solidity ABI Specification."]]};