[package]
name = "moonbeam-service"
authors = [ "PureStake" ]
edition = "2021"
homepage = "https://moonbeam.network"
license = "GPL-3.0-only"
version = "0.28.0"

[dependencies]
ansi_term = "0.12.1"
async-io = "1.3"
async-trait = "0.1.42"
bip32 = { git = "https://github.com/purestake/crates", branch = "bip32-v0.4.0-fix", default-features = false, features = [ "bip39" ] }
derive_more = "0.99"
exit-future = "0.2"
flume = "0.10.9"
futures = { version = "0.3.1", features = [ "compat" ] }
hex-literal = "0.3.4"
jsonrpsee = { version = "0.15.0", default-features = false, features = [ "macros", "server" ] }
libsecp256k1 = { version = "0.6", features = [ "hmac" ] }
log = "0.4"
maplit = "1.0.2"
parking_lot = "0.12.0"
serde = { version = "1.0.101", features = [ "derive" ] }
serde_json = "1.0"
sha3 = { version = "0.9", default-features = false }
tiny-bip39 = { version = "0.8", default-features = false }
tokio = { version = "1.13.0", features = [ "macros", "sync" ] }
trie-root = "0.15.2"

# Moonbeam
cli-opt = { package = "moonbeam-cli-opt", path = "../cli-opt" }
manual-xcm-rpc = { path = "../../client/rpc/manual-xcm" }
moonbeam-core-primitives = { path = "../../core-primitives" }
moonbeam-finality-rpc = { path = "../../client/rpc/finality" }
moonbeam-primitives-ext = { path = "../../primitives/ext" }
moonbeam-rpc-debug = { path = "../../client/rpc/debug" }
moonbeam-rpc-primitives-debug = { path = "../../primitives/rpc/debug" }
moonbeam-rpc-primitives-txpool = { path = "../../primitives/rpc/txpool" }
moonbeam-rpc-trace = { path = "../../client/rpc/trace" }
moonbeam-rpc-txpool = { path = "../../client/rpc/txpool" }
moonbeam-vrf = { path = "../../client/vrf" }
pallet-parachain-staking = { path = "../../pallets/parachain-staking" }
session-keys-primitives = { path = "../../primitives/session-keys" }

# Moonbeam runtimes
moonbase-runtime = { path = "../../runtime/moonbase", optional = true }
moonbeam-runtime = { path = "../../runtime/moonbeam", optional = true }
moonriver-runtime = { path = "../../runtime/moonriver", optional = true }

# Substrate
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
parity-scale-codec = "3.0.0"
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-cli = { workspace = true, features = [ "wasmtime" ] }
sc-client-api = { workspace = true }
sc-client-db = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-manual-seal = { workspace = true }
sc-executor = { workspace = true, features = [ "wasmtime" ] }
sc-finality-grandpa = { workspace = true }
sc-informant = { workspace = true }
sc-network = { workspace = true }
sc-network-common = { workspace = true }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sc-service = { workspace = true }
sc-sysinfo = { workspace = true }
sc-telemetry = { workspace = true }
sc-tracing = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-io = { workspace = true }
sp-keystore = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-storage = { workspace = true }
sp-timestamp = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-trie = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
substrate-prometheus-endpoint = { workspace = true }

# Frontier
fc-consensus = { workspace = true }
fc-db = { workspace = true }
fc-mapping-sync = { workspace = true }
fc-rpc = { workspace = true, features = [ "rpc_binary_search_estimate" ] }
fc-rpc-core = { workspace = true }
fp-consensus = { workspace = true }
fp-rpc = { workspace = true }
fp-storage = { workspace = true }
pallet-ethereum = { workspace = true, features = [ "forbid-evm-reentrancy" ] }

# Cumulus / Nimbus
cumulus-client-cli = { workspace = true }
cumulus-client-collator = { workspace = true }
cumulus-client-consensus-common = { workspace = true }
cumulus-client-consensus-relay-chain = { workspace = true }
cumulus-client-network = { workspace = true }
cumulus-client-service = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-relay-chain-inprocess-interface = { workspace = true }
cumulus-relay-chain-interface = { workspace = true }
cumulus-relay-chain-rpc-interface = { workspace = true }
cumulus-test-relay-sproof-builder = { workspace = true }
nimbus-consensus = { workspace = true }
# TODO we should be able to depend only on the primitives crate once we move the inherent data provider there.
nimbus-primitives = { workspace = true }
pallet-author-inherent = { workspace = true }

# Polkadot
polkadot-cli = { workspace = true }
polkadot-parachain = { workspace = true }
polkadot-primitives = { workspace = true }
polkadot-service = { workspace = true }
xcm = { workspace = true, default-features = false }

# Benchmarking
frame-benchmarking = { workspace = true }
frame-benchmarking-cli = { workspace = true }

[dev-dependencies]
assert_cmd = "0.12"
nix = "0.23"
prometheus = { version = "0.13.0", default-features = false }
rand = "0.7.3"

# Polkadot dev-dependencies
polkadot-runtime-common = { workspace = true }

# Substrate dev-dependencies
pallet-sudo = { workspace = true }
substrate-test-client = { workspace = true }
substrate-test-runtime-client = { workspace = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[features]
default = [
	"kusama-native",
	"moonbase-native",
	"moonbeam-native",
	"moonriver-native",
	"rococo-native",
	"westend-native",
]

kusama-native = [ "polkadot-cli/kusama-native", "polkadot-service/kusama-native" ]
rococo-native = [ "polkadot-cli/rococo-native", "polkadot-service/rococo-native" ]
westend-native = [ "polkadot-cli/westend-native", "polkadot-service/westend-native" ]

moonbase-native = [ "moonbase-runtime", "westend-native" ]
moonbeam-native = [ "moonbeam-runtime" ]
moonriver-native = [ "moonriver-runtime" ]

test-spec = []

runtime-benchmarks = [
	"moonbase-native",
	"moonbase-runtime/runtime-benchmarks",
	"moonbeam-native",
	"moonbeam-runtime/runtime-benchmarks",
	"moonriver-native",
	"moonriver-runtime/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
]

try-runtime = [
	"moonbase-runtime",
	"moonbase-runtime/try-runtime",
]

moonbase-runtime-benchmarks = [
	"moonbase-native",
	"moonbase-runtime/moonbase-runtime-benchmarks",
	"moonbase-runtime/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
]
