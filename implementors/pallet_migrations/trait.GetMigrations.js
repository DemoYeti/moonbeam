(function() {var implementors = {
"moonbeam_runtime_common":[["impl&lt;Runtime, Council, Tech&gt; GetMigrations for <a class=\"struct\" href=\"moonbeam_runtime_common/migrations/struct.CommonMigrations.html\" title=\"struct moonbeam_runtime_common::migrations::CommonMigrations\">CommonMigrations</a>&lt;Runtime, Council, Tech&gt;<span class=\"where fmt-newline\">where\n    Runtime: Config + <a class=\"trait\" href=\"pallet_parachain_staking/pallet/trait.Config.html\" title=\"trait pallet_parachain_staking::pallet::Config\">Config</a> + Config&lt;Hash = PreimageHash&gt; + AuthorSlotFilterConfig + Config&lt;Hash = PreimageHash&gt; + Config&lt;Hash = PreimageHash&gt; + <a class=\"trait\" href=\"pallet_asset_manager/pallet/trait.Config.html\" title=\"trait pallet_asset_manager::pallet::Config\">Config</a> + <a class=\"trait\" href=\"pallet_xcm_transactor/pallet/trait.Config.html\" title=\"trait pallet_xcm_transactor::pallet::Config\">Config</a>,\n    Council: GetStorageVersion + PalletInfoAccess + 'static,\n    Tech: GetStorageVersion + PalletInfoAccess + 'static,\n    &lt;Runtime as <a class=\"trait\" href=\"pallet_asset_manager/pallet/trait.Config.html\" title=\"trait pallet_asset_manager::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_asset_manager/pallet/trait.Config.html#associatedtype.ForeignAssetType\" title=\"type pallet_asset_manager::pallet::Config::ForeignAssetType\">ForeignAssetType</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MultiLocation&gt;,</span>"],["impl&lt;Runtime, Council, Tech&gt; GetMigrations for <a class=\"struct\" href=\"moonbeam_runtime_common/migrations/struct.ReferendaMigrations.html\" title=\"struct moonbeam_runtime_common::migrations::ReferendaMigrations\">ReferendaMigrations</a>&lt;Runtime, Council, Tech&gt;<span class=\"where fmt-newline\">where\n    Runtime: Config + <a class=\"trait\" href=\"pallet_parachain_staking/pallet/trait.Config.html\" title=\"trait pallet_parachain_staking::pallet::Config\">Config</a> + Config&lt;Hash = PreimageHash&gt; + AuthorSlotFilterConfig + Config&lt;Hash = PreimageHash&gt; + Config&lt;Hash = PreimageHash&gt; + Config,\n    Council: GetStorageVersion + PalletInfoAccess + 'static,\n    Tech: GetStorageVersion + PalletInfoAccess + 'static,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()